---

- name: Check for compose file
  ansible.builtin.stat:
    path: "{{ monitoring_host_compose_file_dir }}/docker-compose.yml"
  register: compose_stat

- name: Compose exists
  when: compose_stat.stat.exists
  block:
    - name: Backup compose file
      ansible.builtin.copy:
        src: "{{ monitoring_host_compose_file_dir }}/docker-compose.yml"
        remote_src: true
        dest: "{{ monitoring_host_compose_file_dir }}/docker-compose.yml.{{ ansible_facts.date_time.date }}@{{ ansible_facts.date_time.time }}~"
        mode: u=rw,g=,o=
        owner: "{{ monitoring_host_monitoring_user }}"
        group: "{{ monitoring_host_monitoring_group }}"
        seuser: _default
        serole: _default
        setype: _default
      register: compose_backup_file
    - name: Teardown existing infrastructure
      community.docker.docker_compose_v2:
        project_src: "{{ monitoring_host_compose_file_dir }}"
        state: absent

- name: Create directories
  block:
    - name: Create compose file directory
      ansible.builtin.file:
        path: "{{ monitoring_host_compose_file_dir }}"
        state: directory
        mode: u=rwx,g=,o=
        owner: "{{ monitoring_host_monitoring_user }}"
        group: "{{ monitoring_host_monitoring_group }}"
        seuser: _default
        serole: _default
        setype: _default
    - name: Create config directory
      ansible.builtin.file:
        path: "{{ monitoring_host_prometheus_config_path }}"
        state: directory
        mode: u=rwx,g=,o=
        owner: "{{ monitoring_host_monitoring_user }}"
        group: "{{ monitoring_host_monitoring_group }}"
        seuser: _default
        serole: _default
        setype: svirt_sandbox_file_t
    - name: Create grafana directory
      ansible.builtin.file:
        path: "{{ monitoring_host_grafana_data_path }}"
        state: directory
        mode: u=rwx,g=,o=
        owner: "{{ monitoring_host_monitoring_user }}"
        group: "{{ monitoring_host_monitoring_group }}"
        seuser: _default
        serole: _default
        setype: svirt_sandbox_file_t

- name: Register monitoring user
  ansible.builtin.getent:
    database: passwd

- name: Template compose file
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ monitoring_host_compose_file_dir }}/docker-compose.yml"
    mode: u=rw,g=,o=
    owner: "{{ monitoring_host_monitoring_user }}"
    group: "{{ monitoring_host_monitoring_group }}"
    seuser: _default
    serole: _default
    setype: _default

- name: Create Prometheus config file
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: "{{ monitoring_host_prometheus_config_path }}/prometheus.yml"
    mode: u=rw,g=r,o=r
    owner: "{{ monitoring_host_monitoring_user }}"
    group: "{{ monitoring_host_monitoring_group }}"
    seuser: _default
    serole: _default
    setype: _default

- name: Start new infrastructure
  community.docker.docker_compose_v2:
    project_src: "{{ monitoring_host_compose_file_dir }}"
  ignore_errors: true
  register: new_infra
